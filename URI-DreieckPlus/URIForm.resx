<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tabPage1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8uVv/w8+y17cg6hY1QAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>101, 11</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>37</value>
  </metadata>
</root>